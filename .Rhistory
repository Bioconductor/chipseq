R CMD build chipseq
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Mmusculus.UCSC.mm9.knownGene")
install.packages("TxDb.Mmusculus.UCSC.mm9.knownGene")
install.packages("magick")
git pull origin file-Rmd
library(chipseq)
library(GenomicFeatures)
library(lattice)
data(cstest)
cstest
cstest$ctcf
fraglen <- estimate.mean.fraglen(cstest$ctcf, method="correlation")
fraglen[!is.na(fraglen)]
ctcf.ext <- resize (cstest$ctcf, width = 200)
ctcf.ext
cov.ctcf <- coverage(ctcf.ext)
cov.ctcf
islands <- slice(cov.ctcf, lower = 1)
islands
viewSums(islands)
viewMaxs(islands)
nread.tab <- table(viewSums(islands) / 200)
depth.tab <- table(viewMaxs(islands))
nread.tab[,1:10]
depth.tab[,1:10]
islandReadSummary <- function(x)
{
g <- resize(x, 200)
s <- slice(coverage(g), lower = 1)
tab <- table(viewSums(s) / 200)
df <- DataFrame(tab)
colnames(df) <- c("chromosome", "nread", "count")
df$nread <- as.integer(df$nread)
df
}
head(islandReadSummary(cstest$ctcf))
nread.islands <- DataFrameList(lapply(cstest, islandReadSummary))
nread.islands <- stack(nread.islands, "sample")
nread.islands
xyplot(log(count) ~  nread | sample, as.data.frame(nread.islands),
subset = (chromosome == "chr10" & nread <= 40),
layout = c(1, 2), pch = 16, type = c("p", "g"))
plot(trellis.last.object())
xyplot(log(count) ~ nread | sample, data = as.data.frame(nread.islands),
subset = (chromosome == "chr10" & nread <= 40),
layout = c(1, 2), pch = 16, type = c("p", "g"),
panel = function(x, y, ...) {
panel.lmline(x[1:2], y[1:2], col = "black")
panel.xyplot(x, y, ...)
})
plot(trellis.last.object())
islandDepthSummary <- function(x)
{
g <- resize(x, 200)
s <- slice(coverage(g), lower = 1)
tab <- table(viewMaxs(s) / 200)
df <- DataFrame(tab)
colnames(df) <- c("chromosome", "depth", "count")
df$depth <- as.integer(df$depth)
df
}
depth.islands <- DataFrameList(lapply(cstest, islandDepthSummary))
depth.islands <- stack(depth.islands, "sample")
xyplot(log(count) ~ depth | sample, as.data.frame(depth.islands),
subset = (chromosome == "chr10" & depth <= 20),
layout = c(1, 2), pch = 16, type = c("p", "g"),
panel = function(x, y, ...){
lambda <- 2 * exp(y[2]) / exp(y[1])
null.est <- function(xx) {
xx * log(lambda) - lambda - lgamma(xx + 1)
}
log.N.hat <- null.est(1) - y[1]
panel.lines(1:10, -log.N.hat + null.est(1:10), col = "black")
panel.xyplot(x, y, ...)
})
## depth.islands \<- summarizeReads(cstest, summary.fun = islandDepthSummary)
plot(trellis.last.object())
islandDepthPlot(cov.ctcf)
peakCutoff(cov.ctcf, fdr = 0.0001)
peaks.ctcf <- slice(cov.ctcf, lower = 8)
peaks.ctcf
peaks <- peakSummary(peaks.ctcf)
peak.depths <- viewMaxs(peaks.ctcf)
cov.pos <- coverage(ctcf.ext[strand(ctcf.ext) == "+"])
cov.neg <- coverage(ctcf.ext[strand(ctcf.ext) == "-"])
peaks.pos <- Views(cov.pos, ranges(peaks.ctcf))
peaks.neg <- Views(cov.neg, ranges(peaks.ctcf))
wpeaks <- tail(order(peak.depths$chr10), 4)
wpeaks
coverageplot(peaks.pos$chr10[wpeaks[1]], peaks.neg$chr10[wpeaks[1]])
plot(trellis.last.object())
coverageplot(peaks.pos$chr10[wpeaks[2]], peaks.neg$chr10[wpeaks[2]])
plot(trellis.last.object())
coverageplot(peaks.pos$chr10[wpeaks[3]], peaks.neg$chr10[wpeaks[3]])
plot(trellis.last.object())
coverageplot(peaks.pos$chr10[wpeaks[4]], peaks.neg$chr10[wpeaks[4]])
plot(trellis.last.object())
## find peaks for GFP control
cov.gfp <- coverage(resize(cstest$gfp, 200))
peaks.gfp <- slice(cov.gfp, lower = 8)
peakSummary <- diffPeakSummary(peaks.gfp, peaks.ctcf)
xyplot(asinh(sums2) ~ asinh(sums1) | seqnames,
data = as.data.frame(peakSummary),
panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(median(y - x), 1)
},
type = c("p", "g"), alpha = 0.5, aspect = "iso")
plot(trellis.last.object())
mcols(peakSummary) <-
within(mcols(peakSummary), {
diffs <- asinh(sums2) - asinh(sums1)
resids <- (diffs - median(diffs)) / mad(diffs)
up <- resids > 2
down <- resids < -2
change <- ifelse(up, "up", ifelse(down, "down", "flat"))
})
#library(TxDb.Mmusculus.UCSC.mm9.knownGene)
#gregions <- transcripts(TxDb.Mmusculus.UCSC.mm9.knownGene)
#gregions
#promoters <- flank(gregions, 1000, both = TRUE)
peakSummary$inPromoter <- peakSummary %over% promoters
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
install.packages("GenomicRanges")
BiocManager::install("BSgenome.Mmusculus.UCSC.mm9")
a
BiocManager::install("TxDb.Mmusculus.UCSC.mm9.knownGene")
exists("change")
ls(change)
is.logical(inPromoter)
is.logical(inUpstream)
exists("change")
exists("x")
envir = my_env
is.na(change)
is.na()
is.na(sumtab)
R CMD build
git fetch
