\documentclass{article}
\title{A probabilistic cutoff for calling peaks}

\usepackage[text={178mm,230mm},centering]{geometry}
\usepackage{Sweave}

\SweaveOpts{keep.source=TRUE,eps=FALSE,pdf=TRUE,width=9,height=11,prefix.string=figs/figs-mousepeaks}
\setkeys{Gin}{width=0.98\textwidth}

\begin{document}

\maketitle

\raggedright

<<setup,echo=FALSE,results=hide>>=

library(chipseq)
library(lattice)
## library(hexbin)
## library(latticeExtra)

load("myodMyo.rda")

set.seed(20081008)

@ 


<<defs,echo=FALSE>>=


logscale.components <- function(axis = c("x", "y"), base = 2)
{
    axis <- match.arg(axis)
    switch(axis,
           x = 
           function(...) {
               ans <- xscale.components.default(...)
               ans$bottom$labels$labels <- 
                   base^(ans$bottom$labels$at)
               ans
           },
           y = 
           function(...) {
               ans <- yscale.components.default(...)
               ans$left$labels$labels <- 
                   base^(ans$left$labels$at)
               ans
           })
}



summarizeLane <- function(clist, summary.fun, ..., seqlen)
{
    ## clist is a list at the lane level, with one list("+"=, "-"=) for each chromsome
    stopifnot(all(names(clist) %in% names(seqlen)))
    seqlen <- seqlen[names(clist)]
    mapply(summary.fun, clist, seqlen, ..., SIMPLIFY = FALSE)
}


summarizeReads <- 
    function(reads.list, lanes = c("1", "2", "3", "4", "6", "7", "8"), ...,
             verbose = TRUE)
{
    if (verbose) cat(paste("Processing lanes", paste(lanes, collapse = ",")), fill = TRUE)
    lapply(reads.list[lanes], summarizeLane, ...)
}


coverageSummary <- 
    function(x, max = max(end(g)) + 400L)
    ## x is a list at the lane->chromosome level, with components "+" and "-"
{
    g <- growSeqs(x)
    coverage(g, 1, max)
}


@ 

\section*{Depth distribution over all lanes}


<<>>=

library("BSgenome.Mmusculus.UCSC.mm9")
mouse.seqlens <- seqlengths(Mmusculus)

myodMyoCoverage <- 
    summarizeReads(myodMyo,
                   summary.fun = coverageSummary,
                   seqlen = mouse.seqlens)

isldf.all <- 
    do.call(make.groups, 
            lapply(myodMyoCoverage,
                   function(x) viewMaxs(slice(x[["chr1"]], lower = 1))))

dotplot(xtabs(~data + which, subset(isldf.all, data <= 20)),
        horizontal = FALSE, groups = FALSE,
        main = "Distribution of island depths (chromosome 1)",
        scales = list(y = list(log = 2)),
        yscale.components = logscale.components("y", 2),
        panel = function(x, y, ...) {
            panel.lmline(x[1:2], y[1:2])
            panel.dotplot(x, y, ...)
        },
        layout = c(1, 7), 
        prepanel = function(x, y, ...) {
            prepanel.lmline(x[1:2], y[1:2])[c("dx", "dy")]
        },
        strip = FALSE, strip.left = TRUE,
        aspect = "xy")


@ 

\newpage

\begin{center}
<<fig=TRUE,echo=FALSE>>=
plot(trellis.last.object())
@ 
\end{center}



\newpage

\section*{Combining myotube and myoblast lanes}


<<>>=

seqRanges <- lapply(myodMyo, growSeqs)
cblasts <- combineLanes(seqRanges[c("1","3","6")])
ctubes <- combineLanes(seqRanges[c("2","4","7")])

covblasts <- laneCoverage(cblasts, mouse.seqlens)
covtubes <- laneCoverage(ctubes, mouse.seqlens)

isldf.comb <- 
    do.call(make.groups, 
            lapply(list(blasts.combined = covblasts, 
                        tubes.combined = covtubes,
                        control = myodMyoCoverage[["8"]]),
                   function(x) viewMaxs(slice(x[["chr1"]], lower = 1))))

dotplot(xtabs(~data + which, subset(isldf.comb, data <= 20)),
        horizontal = FALSE, groups = FALSE,
        main = "Distribution of island depths (chromosome 1)",
        scales = list(y = list(log = 2)),
        yscale.components = logscale.components("y", 2),
        panel = function(x, y, ...) {
            panel.lmline(x[1:2], y[1:2])
            ## panel.lmline(x[3:4], y[3:4], col = "magenta")
            panel.dotplot(x, y, ...)
        },
        layout = c(1, 3), 
        prepanel = function(x, y, ...) {
            prepanel.lmline(x[3:4], y[3:4])[c("dx", "dy")]
        },
        strip = FALSE, strip.left = TRUE,
        aspect = "xy")

@ 

\newpage

\begin{center}
<<fig=TRUE,echo=FALSE>>=
plot(trellis.last.object())
@ 
\end{center}


\newpage


\section*{A null model for island depths}

Consider a slightly different problem:
\begin{itemize}
\item For each extended read $[a_i, b_i]$, where $a_i < b_i$ and $b_i
  - a_i = 200$, let $X_i$ be the number of other start points $a_j \in
  [a_i, b_i], j \neq i$.
\item $X_i = k$ implies island of depth $k$ (or more).
\item island of depth $k$ implies $X_i = k$ for some $i$ in that island.
\end{itemize}
We will pretend that $X_i$-s are a reasonable first approximation to
island depths.  Note that the following analysis applies directly to
the number of reads (rather than depth) per island as well.


$X_i \sim Poisson(\lambda)$ for some unknown $\lambda$ (approximately
$200 N / G$, where $N$ is the number of reads, and $G$ is the length
of the genome).  
\[
f_\lambda(x) = P(X_i = x) = \lambda^x \frac{e^{-\lambda}}{x!}
\]
so
\[
\log(f_\lambda(x)) = -\lambda + x \log \lambda - \log \Gamma(x+1)
\]
The shape of this function depends on $\lambda$.  Note that 
\[
\frac{f_\lambda(2)}{f_\lambda(1)} = \lambda/2 
\]
so a crude estimate of $\lambda$ is
\[
\hat \lambda = 2 X_2 / X_1
\]
Using this as a more sophisticated estimate of the null distribution,
we get
<<>>=

dotplot(xtabs(~data + which, subset(isldf.all, data <= 20)),
        horizontal = FALSE, groups = FALSE,
        main = "Distribution of island depths (chromosome 1)",
        scales = list(y = list(log = "e")),
        panel = function(x, y, ...) {
            lambda <- 2 * exp(y[2]) / exp(y[1])
            null.est <- function(xx) { 
                (xx * log(lambda) - lambda - lgamma(xx + 1))
            }
            log.N.hat <- null.est(1) - y[1] # both already log-transformed
            panel.lines(1:20, -log.N.hat + null.est(1:20))
            panel.dotplot(x, y, ...)
            const <- y[1] - (log(lambda) - lambda)
        },
        layout = c(1, 7), 
        strip = FALSE, strip.left = TRUE,
        aspect = 0.4)

@ 

\newpage

\begin{center}
<<fig=TRUE,echo=FALSE>>=
plot(trellis.last.object())
@ 
\end{center}


\newpage

<<>>=

dotplot(xtabs(~data + which, subset(isldf.comb, data <= 20)),
        horizontal = FALSE, groups = FALSE,
        main = "Distribution of island depths (chromosome 1)",
        scales = list(y = list(log = "e")),
        panel = function(x, y, ...) {
            lambda <- 2 * exp(y[2]) / exp(y[1])
            null.est <- function(xx) { 
                (xx * log(lambda) - lambda - lgamma(xx + 1))
            }
            log.N.hat <- null.est(1) - y[1] # both already log-transformed
            panel.lines(1:20, -log.N.hat + null.est(1:20))
            panel.dotplot(x, y, ...)
            const <- y[1] - (log(lambda) - lambda)
        },
        layout = c(1, 3), 
        strip = FALSE, strip.left = TRUE,
        aspect = 0.4)

@ 

\newpage

\begin{center}
<<fig=TRUE,echo=FALSE>>=
plot(trellis.last.object())
@ 
\end{center}





\end{document}
